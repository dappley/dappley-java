plugins {
    id 'java'
    // binary plugins
    id 'com.github.dcendents.android-maven' version '2.1'
    id 'com.jfrog.bintray' version '1.8.4'
}

def RELEASE_GROUP_ID = "com.dappley"
def RELEASE_ARTIFACT_ID = "java-sdk"
def RELEASE_VERSION = "3.1.0"
def RELEASE_NAME = "dappley-java-sdk"
def SITE_URL = "https://github.com/dappley/dappley-java"

group RELEASE_GROUP_ID
version RELEASE_VERSION

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'com.dappley:java-core:3.1.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'jar'
                name RELEASE_NAME
                groupId RELEASE_GROUP_ID
                artifactId RELEASE_ARTIFACT_ID
                version RELEASE_VERSION
                url SITE_URL
                licenses {
                    license {
                        name 'GNU Lesser General Public License v3.0'
                        url 'http://www.gnu.org/licenses/lgpl-3.0.en.html'
                    }
                }
                developers {
                    developer {
                        id 'Dappley'
                        name 'Dappley'
                    }
                }
                scm {
                    connection SITE_URL
                    developerConnection SITE_URL
                    url SITE_URL
                }
            }
        }
    }
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}
task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = readPropertyFromLocalProperties("bintray.user")
    key = readPropertyFromLocalProperties("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "dappley-java"
        name = RELEASE_NAME
        websiteUrl = SITE_URL
        vcsUrl = SITE_URL
        licenses = ["LGPL-3.0"]
        publish = true
    }
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/8/docs/api"
    }
}

test {
    exclude '**/*'
}

def readPropertyFromLocalProperties(String key) {
    Properties properties = new Properties()
    try {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    } catch (Exception e) {
        println("load local properties failed msg:${e.message}")
    }
    return properties.getProperty(key)
}
